{% extends 'base.html.twig' %}  
{% block title %}Stock{% endblock %}

{% block sidebar %}
    {% include 'dotation/sidebar.html.twig' with {'active_link': 'stock'} %}
{% endblock %}

{% block body %}

<div class="container mt-5">
    <h1 class="text-center">Gestion des Stocks</h1>

    {# Collecte des types disponibles #}
    {% set types = [] %}
    {% for produit in produitsAvecDetails %}
        {% if produit.article.nomType not in types %}
            {% set types = types|merge([produit.article.nomType]) %}
        {% endif %}
    {% endfor %}

    <!-- Barre de recherche et filtre par type -->
    <div class="row mt-4">
        <div class="col-md-6">
            <input type="text" id="searchInput" class="form-control mb-4" placeholder="Rechercher un produit par Ref ou Nom">
        </div>
        <div class="col-md-6">
            <select id="typeFilter" class="form-select mb-4">
                <option value="">Tous les types</option>
                {% for type in types %}
                    <option value="{{ type|e }}">{{ type }}</option>
                {% endfor %}
            </select>
        </div>
    </div>

    <!-- Table des produits -->
    <div class="mt-4">
        <table class="table table-striped">
            <thead class="thead-dark">
                <tr>
                    <th scope="col">Photo :</th>
                    <th scope="col">Ref :</th>
                    <th scope="col">Nom :</th>
                    <th scope="col">Type :</th>
                    <th scope="col">Configurations :</th>
                </tr>
            </thead>
            <tbody id="productTable">
                {% for produit in produitsAvecDetails %}
                <tr class="product-row" data-type="{{ produit.article.nomType|lower }}">

                <td scope="row">
                    <img class="card-img-top img-fluid"
                        style="width: 100px; height: auto; object-fit: cover;"
                        src="{{ produit.article.image is not empty ? asset('uploads/images/' ~ produit.article.image) : 'img/defaultimage.png?v=1648567836&width=1080' }}"
                        alt="{{ produit.article.id }}">
                    </td>
                    <td class="product-ref">{{ produit.article.reference }}</td>
                    
                    <td class="product-name">{{ produit.article.nom }}</td>
                    <td>{{ produit.article.nomType }}</td>
                    <td>
                        <ul>
                            {% for config in produit.stockDetails %}
                                <li>
                                    Taille: <span class="badge bg-primary">{{ config.taille }}</span>,
                                    Couleur: <span class="" style="background-color: {{config.codeCouleur}}; color: white; padding: 1px 2px; border-radius: 5px;">{{ config.couleur }}</span>,
                                    Stock: 
                                    <form action="{{ path('update_stock') }}" method="POST" style="display: inline;">
                                        <input type="hidden" name="referenceArticle" value="{{ produit.article.reference }}">
                                        <input type="hidden" name="nomTaille" value="{{ config.taille }}">
                                        <input type="hidden" name="nomCouleur" value="{{ config.couleur }}">
                                        <input type="number" name="quantity" value="{{ config.stock }}" class="form-control d-inline-block" style="width: 80px;">
                                        <button type="submit" class="btn btn-sm btn-success">Modifier</button>
                                    </form>
                                </li>
                            {% endfor %}
                        </ul>
                    </td>
                </tr>
                {% endfor %}
            </tbody>
        </table>
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        const searchInput = document.getElementById('searchInput');
        const typeFilter = document.getElementById('typeFilter');
        const productRows = document.querySelectorAll('.product-row');

        function filterRows() {
            const searchValue = searchInput.value.trim().toLowerCase();
            const typeValue = typeFilter.value.trim().toLowerCase();

            productRows.forEach(row => {
                const productName = row.querySelector('.product-name').textContent.toLowerCase();
                const productRef = row.querySelector('.product-ref').textContent.toLowerCase();
                const productType = (row.getAttribute('data-type') || '').toLowerCase();

                const matchesSearch = !searchValue || productName.includes(searchValue) || productRef.includes(searchValue);
                const matchesType = !typeValue || productType === typeValue;

                row.style.display = (matchesSearch && matchesType) ? '' : 'none';
            });
        }

        searchInput.addEventListener('input', filterRows);
        typeFilter.addEventListener('change', filterRows);
    });
</script>

{% endblock %}
