{% extends 'base.html.twig' %}

{% block title %}Liste des clients{% endblock %}

{% block body %}
<div class="mt-4">
    <div class="container mt-4">
        <h2 class="mb-4">Liste des clients</h2>
        <div class="d-flex justify-content-between align-items-center mb-4">
            <form method="get" class="row g-2 align-items-center">
                <div class="col-auto">
                    <label for="signataire" class="col-form-label fw-bold">Choisir un signataire :</label>
                </div>
                <div class="col-auto">
                    <select id="signataire" name="signataire" class="form-select" onchange="this.form.submit()">
                        <option value="">-- Tous les signataires --</option>
                        {% for signataire in signataires %}
                            <option value="{{ signataire.id }}" {% if signataire_selected == signataire.id %}selected{% endif %}>
                                {{ signataire.nom }}
                            </option>
                        {% else %}
                            <option disabled>Aucun signataire trouvé.</option>
                        {% endfor %}
                    </select>
                </div>
                <div class="col-auto">
                    <label for="categorie" class="col-form-label fw-bold">Choisir une catégorie :</label>
                </div>
                <div class="col-auto">
                    <select id="categorie" name="categorie" class="form-select" onchange="this.form.submit()">
                        <option value="">-- Toutes les catégories --</option>
                        {% for cat in categories %}
                            <option value="{{ cat.id }}" {% if categorie_selected == cat.id %}selected{% endif %}>
                                {{ cat.nomCategorie }}
                            </option>
                        {% else %}
                            <option disabled>Aucune catégorie trouvée.</option>
                        {% endfor %}
                    </select>
                </div>
            </form>
            <div>
                <a href="{{ path('app_client_new') }}" class="btn btn-primary">Ajouter un client</a>
            </div>
        </div>
    </div>

    <div class="table-responsive">
        <table class="table table-striped table-hover align-middle">
            <thead class="table-dark">
                <tr>
                    <th>#</th> <!-- New column for row count -->
                    <th>Nom</th>
                    <th>Prénom</th>
                    <th>Ville</th>
                    <th>Pays</th>
                    <th>Société</th>
                    <th>Catégorie</th> 
                    <th>Conserver</th>
                    <th>Signature Manuscrite</th>
                    <th>Envoi mail</th>
                </tr>
            </thead>
            <tbody>
                {% if signataire_selected %}
                    {% for client in clients %}
                        {% set clientAssocs = associations[client.id] ?? [] %}
                        {% set assoc = clientAssocs|filter(a => a.signataire.id == signataire_selected)|first %}
                        <tr class="{% if assoc and assoc.conserver %}row-conserver-oui{% endif %}" 
                            data-bs-toggle="modal" 
                            data-bs-target="#addressModal"
                            data-client-id="{{ client.id }}"
                            data-client-adresse1="{{ client.adresse1|default('') }}"
                            data-client-adresse2="{{ client.adresse2|default('') }}"
                            data-client-codepostal="{{ client.codePostal|default('') }}"
                            data-client-ville="{{ client.ville|default('') }}"
                            data-client-pays="{{ client.pays|default('') }}"
                            style="cursor: pointer;">
                        
                            <td>{{ loop.index }}</td>
                            <td>{{ client.triNom }}</td>
                            <td>{{ client.triPrenom }}</td>
                            <td>{{ client.ville }}</td>
                            <td>{{ client.pays }}</td>
                            <td>{{ client.societeNom }}</td>
                            <td>{{ client.categorieEntity ? client.categorieEntity.nomCategorie : 'Aucune' }}</td>
                            
                            <td>
                                <div class="btn-group" role="group">
                                    <button type="button" class="btn btn-sm conserver-btn conserver-oui"
                                            data-client-id="{{ client.id }}" data-signataire="{{ assoc ? assoc.signataire.id : '' }}"
                                            data-value="1" style="background-color: {% if assoc and assoc.conserver %}green{% else %}gray{% endif %}; color: white;">
                                        Oui
                                    </button>
                                    <button type="button" class="btn btn-sm conserver-btn conserver-non"
                                            data-client-id="{{ client.id }}" data-signataire="{{ assoc ? assoc.signataire.id : '' }}"
                                            data-value="0" style="background-color: {% if assoc and not assoc.conserver %}red{% else %}gray{% endif %}; color: white;">
                                        Non
                                    </button>
                                </div>
                            </td>

                            <td>
                                <div class="btn-group" role="group">
                                    <button type="button" class="btn btn-sm signature-btn signature-oui"
                                            data-client-id="{{ client.id }}" data-signataire="{{ assoc ? assoc.signataire.id : '' }}"
                                            data-value="1" style="background-color: {% if assoc and assoc.signature %}green{% else %}gray{% endif %}; color: white;">
                                        Oui
                                    </button>
                                    <button type="button" class="btn btn-sm signature-btn signature-non"
                                            data-client-id="{{ client.id }}" data-signataire="{{ assoc ? assoc.signataire.id : '' }}"
                                            data-value="0" style="background-color: {% if assoc and not assoc.signature %}red{% else %}gray{% endif %}; color: white;">
                                        Non
                                    </button>
                                </div>
                            </td>

                            <td>
                                <div class="btn-group" role="group">
                                    <button type="button" class="btn btn-sm envoi-mail-btn envoi-mail-oui"
                                            data-client-id="{{ client.id }}" data-signataire="{{ assoc ? assoc.signataire.id : '' }}"
                                            data-value="1" style="background-color: {% if assoc and assoc.envoiMail %}green{% else %}gray{% endif %}; color: white;">
                                        Oui
                                    </button>
                                    <button type="button" class="btn btn-sm envoi-mail-btn envoi-mail-non"
                                            data-client-id="{{ client.id }}" data-signataire="{{ assoc ? assoc.signataire.id : '' }}"
                                            data-value="0" style="background-color: {% if assoc and not assoc.envoiMail %}red{% else %}gray{% endif %}; color: white;">
                                        Non
                                    </button>
                                </div>
                            </td>
                        </tr>
                    {% else %}
                        <tr>
                            <td colspan="10" class="text-center text-muted">Aucun client trouvé pour ce signataire.</td>
                        </tr>
                    {% endfor %}
                {% else %}
                    <tr>
                        <td colspan="10" class="text-center text-muted">Veuillez sélectionner un signataire pour afficher les clients.</td>
                    </tr>
                {% endif %}
            </tbody>


        </table>
    </div>
</div>

<!-- Modal -->
<div class="modal fade" id="addressModal" tabindex="-1" aria-labelledby="addressModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="addressModalLabel">Modifier l'adresse</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <form id="addressForm">
            <input type="hidden" id="modalClientId" name="clientId">
            <div class="mb-3">
                <label for="modalAdresse1" class="form-label">Adresse 1</label>
                <input type="text" class="form-control" id="modalAdresse1">
            </div>
            <div class="mb-3" hidden>
                <label for="modalAdresse2" class="form-label">Adresse 2</label>
                <input type="text" class="form-control" id="modalAdresse2">
            </div>
            <div class="mb-3">
                <label for="modalCodePostal" class="form-label">Code Postal</label>
                <input type="text" class="form-control" id="modalCodePostal">
            </div>
            <div class="mb-3">
                <label for="modalVille" class="form-label">Ville</label>
                <input type="text" class="form-control" id="modalVille">
            </div>
            <div class="mb-3">
                <label for="modalPays" class="form-label">Pays</label>
                <input type="text" class="form-control" id="modalPays">
            </div>
        </form>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Fermer</button>
        <button type="button" class="btn btn-primary" id="saveAddressBtn">Enregistrer</button>
      </div>
    </div>
  </div>
</div>


<style>
/* applique la couleur verte clair à toutes les cellules de la ligne */
.row-conserver-oui td {
    background-color: #d4edda !important; /* vert clair */
}
</style>

{% endblock %}

{% block javascripts %}
{{ parent() }}
<script>
document.addEventListener('DOMContentLoaded', function() {
    // --- Script pour les boutons Oui/Non ---
    document.querySelectorAll('.conserver-btn, .signature-btn, .envoi-mail-btn').forEach(function(button) {
        button.addEventListener('click', function(event) {
            event.stopPropagation(); // Empêche l'ouverture de la modale
            const clientId = this.dataset.clientId;
            const value = this.dataset.value;
            const signataire = this.dataset.signataire;
            let field = 'signature';
            if (this.classList.contains('conserver-btn')) field = 'conserver';
            if (this.classList.contains('envoi-mail-btn')) field = 'envoiMail';

            const row = this.closest('tr'); // récupère la ligne courante

            fetch("{{ path('app_clients_update_field') }}", {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest',
                    'X-CSRF-TOKEN': '{{ csrf_token('update_client_field') }}'
                },
                body: JSON.stringify({ id: clientId, signataire: signataire, field: field, value: value })
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    // Réinitialiser les couleurs des boutons du groupe
                    const group = this.parentElement;
                    group.querySelectorAll('button').forEach(btn => btn.style.backgroundColor = 'gray');

                    // Gestion spécifique du champ "conserver"
                    if (field === 'conserver') {
                        if (value === '1') {
                            this.style.backgroundColor = 'green';
                            row.classList.add('row-conserver-oui'); // applique la classe
                        } else {
                            this.style.backgroundColor = 'red';
                            row.classList.remove('row-conserver-oui'); // supprime la classe
                        }
                    } else if (field === 'signature') {
                        this.style.backgroundColor = value === '1' ? 'green' : 'red';
                    } else if (field === 'envoiMail') {
                        this.style.backgroundColor = value === '1' ? 'green' : 'red';
                    }
                } else {
                    alert('Erreur lors de la sauvegarde');
                }
            })
            .catch(() => alert('Erreur lors de la sauvegarde'));
        });
    });

    // --- Script pour la modale d'adresse ---
    const addressModal = document.getElementById('addressModal');
    let currentRow = null; // Pour garder une référence à la ligne cliquée

    addressModal.addEventListener('show.bs.modal', function (event) {
        const row = event.relatedTarget;
        currentRow = row; // Stocke la ligne
        
        // Récupérer les données de la ligne
        const clientId = row.dataset.clientId;
        const adresse1 = row.dataset.clientAdresse1;
        const adresse2 = row.dataset.clientAdresse2;
        const codePostal = row.dataset.clientCodepostal;
        const ville = row.dataset.clientVille;
        const pays = row.dataset.clientPays;

        // Remplir le formulaire de la modale
        document.getElementById('modalClientId').value = clientId;
        document.getElementById('modalAdresse1').value = adresse1;
        document.getElementById('modalAdresse2').value = adresse2;
        document.getElementById('modalCodePostal').value = codePostal;
        document.getElementById('modalVille').value = ville;
        document.getElementById('modalPays').value = pays;
    });

    document.getElementById('saveAddressBtn').addEventListener('click', function() {
        const clientId = document.getElementById('modalClientId').value;
        // Utiliser le router de Twig pour générer une URL dynamique et robuste.
        // On utilise un placeholder 'ID_PLACEHOLDER' qu'on remplace ensuite.
        const urlTemplate = "{{ path('app_client_update_address', {id: 'ID_PLACEHOLDER'}) }}";
        const url = urlTemplate.replace('ID_PLACEHOLDER', clientId);

        const data = {
            adresse1: document.getElementById('modalAdresse1').value,
            adresse2: document.getElementById('modalAdresse2').value,
            codePostal: document.getElementById('modalCodePostal').value,
            ville: document.getElementById('modalVille').value,
            pays: document.getElementById('modalPays').value,
        };

        fetch(url, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'X-Requested-With': 'XMLHttpRequest'
            },
            body: JSON.stringify(data)
        })
        .then(response => response.json())
        .then(result => {
            if (result.success && result.client) { // Ajout de la vérification de result.client
                // Mettre à jour les données dans la vue sans recharger la page
                const updatedClient = result.client;
                if (currentRow) {
                    // Mettre à jour les cellules Ville et Pays
                    currentRow.cells[3].textContent = updatedClient.ville || '';
                    currentRow.cells[4].textContent = updatedClient.pays || '';

                    // Mettre à jour les attributs data de la ligne en s'assurant que les valeurs ne sont pas null
                    currentRow.dataset.clientVille = updatedClient.ville || '';
                    currentRow.dataset.clientPays = updatedClient.pays || '';
                    currentRow.dataset.clientAdresse1 = updatedClient.adresse1 || '';
                    currentRow.dataset.clientAdresse2 = updatedClient.adresse2 || '';
                    currentRow.dataset.clientCodepostal = updatedClient.codePostal || '';
                }
                
                // Fermer la modale avec la syntaxe jQuery (compatible Bootstrap 4)
                $('#addressModal').modal('hide');

            } else {
                alert('Erreur lors de la mise à jour de l\'adresse.');
            }
        })
        .catch((error) => {
            console.error('Erreur dans le traitement de la réponse:', error);
            alert('Une erreur est survenue lors de la mise à jour de l\'affichage.');
        });
    });
});
</script>
{% endblock %}
