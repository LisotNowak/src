{% extends 'base.html.twig' %}

{% block title %}Liste des clients{% endblock %}

{% block body %}
<div class="mt-4">
    <div class="container mt-4">
        <h2 class="mb-4">Liste des clients</h2>
        <form method="get" class="mb-4">
            <div class="row g-2 align-items-center">
                <div class="col-auto">
                    <label for="signataire" class="col-form-label fw-bold">Choisir un signataire :</label>
                </div>
                <div class="col-auto">
                    <select id="signataire" name="signataire" class="form-select" onchange="this.form.submit()">
                        <option value="">-- Tous les signataires --</option>
                        {% for signataire in signataires %}
                            <option value="{{ signataire.id }}" {% if signataire_selected == signataire.id %}selected{% endif %}>
                                {{ signataire.nom }}
                            </option>
                        {% else %}
                            <option disabled>Aucun signataire trouvé.</option>
                        {% endfor %}
                    </select>
                </div>
                <div class="col-auto">
                    <label for="categorie" class="col-form-label fw-bold">Choisir une catégorie :</label>
                </div>
                <div class="col-auto">
                    <select id="categorie" name="categorie" class="form-select" onchange="this.form.submit()">
                        <option value="">-- Toutes les catégories --</option>
                        {% for cat in categories %}
                            <option value="{{ cat.id }}" {% if categorie_selected == cat.id %}selected{% endif %}>
                                {{ cat.nomCategorie }}
                            </option>
                        {% else %}
                            <option disabled>Aucune catégorie trouvée.</option>
                        {% endfor %}
                    </select>
                </div>
            </div>
        </form>
    </div>

    <div class="table-responsive">
        <table class="table table-striped table-hover align-middle">
            <thead class="table-dark">
                <tr>
                    <th>#</th> <!-- New column for row count -->
                    <th>Nom</th>
                    <th>Prénom</th>
                    <th>Ville</th>
                    <th>Pays</th>
                    <th>Société</th>
                    <th>Catégorie</th> 
                    <th>Conserver</th>
                    <th>Signature Manuscrite</th>
                    <th>Envoi mail</th>
                </tr>
            </thead>
            <tbody>
                {% if signataire_selected %}
                    {% for client in clients %}
                        {% set clientAssocs = associations[client.id] ?? [] %}
                        {% set assoc = clientAssocs|filter(a => a.signataire.id == signataire_selected)|first %}
                        <tr class="{% if assoc and assoc.conserver %}row-conserver-oui{% endif %}">
                        
                            <td>{{ loop.index }}</td>
                            <td>{{ client.triNom }}</td>
                            <td>{{ client.triPrenom }}</td>
                            <td>{{ client.ville }}</td>
                            <td>{{ client.pays }}</td>
                            <td>{{ client.societeNom }}</td>
                            <td>{{ client.categorieEntity ? client.categorieEntity.nomCategorie : 'Aucune' }}</td>
                            
                            <td>
                                <div class="btn-group" role="group">
                                    <button type="button" class="btn btn-sm conserver-btn conserver-oui"
                                            data-client-id="{{ client.id }}" data-signataire="{{ assoc ? assoc.signataire.id : '' }}"
                                            data-value="1" style="background-color: {% if assoc and assoc.conserver %}green{% else %}gray{% endif %}; color: white;">
                                        Oui
                                    </button>
                                    <button type="button" class="btn btn-sm conserver-btn conserver-non"
                                            data-client-id="{{ client.id }}" data-signataire="{{ assoc ? assoc.signataire.id : '' }}"
                                            data-value="0" style="background-color: {% if assoc and not assoc.conserver %}red{% else %}gray{% endif %}; color: white;">
                                        Non
                                    </button>
                                </div>
                            </td>

                            <td>
                                <div class="btn-group" role="group">
                                    <button type="button" class="btn btn-sm signature-btn signature-oui"
                                            data-client-id="{{ client.id }}" data-signataire="{{ assoc ? assoc.signataire.id : '' }}"
                                            data-value="1" style="background-color: {% if assoc and assoc.signature %}green{% else %}gray{% endif %}; color: white;">
                                        Oui
                                    </button>
                                    <button type="button" class="btn btn-sm signature-btn signature-non"
                                            data-client-id="{{ client.id }}" data-signataire="{{ assoc ? assoc.signataire.id : '' }}"
                                            data-value="0" style="background-color: {% if assoc and not assoc.signature %}red{% else %}gray{% endif %}; color: white;">
                                        Non
                                    </button>
                                </div>
                            </td>

                            <td>
                                <div class="btn-group" role="group">
                                    <button type="button" class="btn btn-sm envoi-mail-btn envoi-mail-oui"
                                            data-client-id="{{ client.id }}" data-signataire="{{ assoc ? assoc.signataire.id : '' }}"
                                            data-value="1" style="background-color: {% if assoc and assoc.envoiMail %}green{% else %}gray{% endif %}; color: white;">
                                        Oui
                                    </button>
                                    <button type="button" class="btn btn-sm envoi-mail-btn envoi-mail-non"
                                            data-client-id="{{ client.id }}" data-signataire="{{ assoc ? assoc.signataire.id : '' }}"
                                            data-value="0" style="background-color: {% if assoc and not assoc.envoiMail %}red{% else %}gray{% endif %}; color: white;">
                                        Non
                                    </button>
                                </div>
                            </td>
                        </tr>
                    {% else %}
                        <tr>
                            <td colspan="10" class="text-center text-muted">Aucun client trouvé pour ce signataire.</td>
                        </tr>
                    {% endfor %}
                {% else %}
                    <tr>
                        <td colspan="10" class="text-center text-muted">Veuillez sélectionner un signataire pour afficher les clients.</td>
                    </tr>
                {% endif %}
            </tbody>


        </table>
    </div>
</div>

<style>
/* applique la couleur verte clair à toutes les cellules de la ligne */
.row-conserver-oui td {
    background-color: #d4edda !important; /* vert clair */
}
</style>


{% block javascripts %}
{{ parent() }}
<script>
document.addEventListener('DOMContentLoaded', function() {
    document.querySelectorAll('.conserver-btn, .signature-btn, .envoi-mail-btn').forEach(function(button) {
        button.addEventListener('click', function() {
            const clientId = this.dataset.clientId;
            const value = this.dataset.value;
            const signataire = this.dataset.signataire;
            let field = 'signature';
            if (this.classList.contains('conserver-btn')) field = 'conserver';
            if (this.classList.contains('envoi-mail-btn')) field = 'envoiMail';

            const row = this.closest('tr'); // récupère la ligne courante

            fetch("{{ path('app_clients_update_field') }}", {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest',
                    'X-CSRF-TOKEN': '{{ csrf_token('update_client_field') }}'
                },
                body: JSON.stringify({ id: clientId, signataire: signataire, field: field, value: value })
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    // Réinitialiser les couleurs des boutons du groupe
                    const group = this.parentElement;
                    group.querySelectorAll('button').forEach(btn => btn.style.backgroundColor = 'gray');

                    // Gestion spécifique du champ "conserver"
                    if (field === 'conserver') {
                        if (value === '1') {
                            this.style.backgroundColor = 'green';
                            row.classList.add('row-conserver-oui'); // applique la classe
                        } else {
                            this.style.backgroundColor = 'red';
                            row.classList.remove('row-conserver-oui'); // supprime la classe
                        }
                    } else if (field === 'signature') {
                        this.style.backgroundColor = value === '1' ? 'green' : 'red';
                    } else if (field === 'envoiMail') {
                        this.style.backgroundColor = value === '1' ? 'green' : 'red';
                    }
                } else {
                    alert('Erreur lors de la sauvegarde');
                }
            })
            .catch(() => alert('Erreur lors de la sauvegarde'));
        });
    });
});
</script>
{% endblock %}


{% endblock %}
